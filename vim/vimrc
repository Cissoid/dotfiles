" ================
" vundle settings {{{
" ================
set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'
Plugin 'dirdiff.vim'
Plugin 'scrooloose/nerdtree'
Plugin 'scrooloose/nerdcommenter'
Plugin 'scrooloose/syntastic'
Plugin 'jistr/vim-nerdtree-tabs'
Plugin 'sjl/gundo.vim'
Plugin 'rking/ag.vim'
Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'Valloric/YouCompleteMe'
Plugin 'taglist.vim'
Plugin 'tpope/vim-fugitive'
Plugin 'tomasr/molokai'
" Plugin 'DrawIt.vim'
Plugin 'fatih/vim-go'
" Plugin 'bling/vim-airline'
" Plugin 'powerline/powerline'

" The following are examples of different formats supported.
" Keep Plugin commands between vundle#begin/end.
" plugin on GitHub repo
" Plugin 'tpope/vim-fugitive'
" plugin from http://vim-scripts.org/vim/scripts.html
" Plugin 'L9'
" Git plugin not hosted on GitHub
" Plugin 'git://git.wincent.com/command-t.git'
" git repos on your local machine (i.e. when working on your own plugin)
" Plugin 'file:///home/gmarik/path/to/plugin'
" The sparkup vim script is in a subdirectory of this repo called vim.
" Pass the path to set the runtimepath properly.
" Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}
" Avoid a name conflict with L9
" Plugin 'user/L9', {'name': 'newL9'}

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line
" ================
" }}} end vundle settings
" ================

" ================
" plugin settings {{{
" ================

" powerline settings {{{
python from powerline.vim import setup as powerline_setup
python powerline_setup()
python del powerline_setup
" }}}

" syntastic settings, this MUST set after powerline settings. {{{
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
" }}}

" nerdtree settings {{{
let NERDTreeIgnore = ['\.pyc$', '\~$']
" }}}

" ctrlp settings {{{
" show window in bottom, and sort from top to bottom.
let g:ctrlp_match_window = 'bottom,order:ttb'
" open match file in new buffer.
let g:ctrlp_switch_buffer = 0
" support change working directory.
let g:ctrlp_working_path_mode = 0
" use ag to speed up.
if executable('ag')
    let g:ctrlp_user_command = 'ag %s -l --nocolor --hidden -g ""'
    let g:ctrlp_use_caching = 0
endif
" }}}

" ycm settings {{{
let g:ycm_autoclose_preview_window_after_completion = 1
" }}}

" ================
" }}} end plugin settings
" ================

" ================
" custom settings {{{
" ================
" color setting {{{
colorscheme molokai
syntax enable
" colorful!
set t_Co=256
" }}}

" ui setting {{{
" always show tab line.
set showtabline=2
" always show status line.
set laststatus=2
" don't show default mode line(above status line).
set noshowmode
" show line number.
set number
" show command in bottom bar, no use for powerline.
set showcmd
" highlight current line.
set cursorline
" show a menu for filename autocomplete.
set wildmenu
" lazy redraw.
set lazyredraw
" show the matching part of the pair for [] {} and ()
set showmatch
" set text width
set textwidth=80
" highlight the long text
set colorcolumn=+1
set ruler
" }}}

" tab & space setting. {{{
" number of visual spaces for tab.
set tabstop=4
" number of actual spaces for tab.
set softtabstop=4
" make << or >> step 4 spaces.
set shiftwidth=4
" convert tab to spaces.
set expandtab
" auto indent.
set autoindent
" }}}

" search setting. {{{
" highlight matches.
set hlsearch
" search ignore case.
set ignorecase
" incremantal search.
set incsearch
" }}}

" folding setting {{{
" enable fold
set foldenable
" fold based on indent level.
set foldmethod=indent
" 10 fold when open file.
set foldlevelstart=10
set foldlevel=99
" 10 nest fold max.
set foldnestmax=10
" }}} 

" enable all Python syntax highlighting features
let python_highlight_all = 1
" ================
" }}} end custom settings
" ================

" ================
" keymap settings {{{
" ================
" let mapleader=","

" nmap {{{
" hard mode
nnoremap <LEFT> <NOP>
nnoremap <RIGHT> <NOP>
nnoremap <UP> <NOP>
nnoremap <DOWN> <NOP>
" move vertically by visual line
nnoremap j gj
nnoremap k gk
" space = toggle folding.
nnoremap <SPACE> za
" highlight last inserted text
nnoremap gV `[v`]
" actually it map to Ctrl+/. See
" http://stackoverflow.com/questions/9051837/how-to-map-c-to-toggle-comments-in-vim.
" nmap <C-_> <Plug>NERDCommenterToggle
"
nnoremap <LEADER>u :GundoToggle<CR>
nnoremap <LEADER>s :mksession<CR>
nnoremap <LEADER>a :Ag 
nnoremap <LEADER>ev :vsplit $MYVIMRC<CR>
" reopen .vimrc after source, otherwise filetype specific settinsg will not
" work.
nnoremap <LEADER>sv :source $MYVIMRC<CR>:q<CR>:vsplit $MYVIMRC<CR>
nnoremap <C-n> :tabnew<CR>
" }}}

" imap {{{
" hard mode
inoremap <LEFT> <NOP>
inoremap <RIGHT> <NOP>
inoremap <UP> <NOP>
inoremap <DOWN> <NOP>
inoremap <ESC> <NOP>
inoremap jk <ESC>
" }}}
" ================
" }}} end keymap settings
" ================

" ================
" filetype specific settings. {{{
" ================
augroup filetype_vim
    autocmd!
    autocmd FileType vim setlocal foldmethod=marker foldlevel=0
augroup END
" ================
" }}}
" ================

" comment this because augroup seems better, modelines should use in specific
" file, IMO.
" set modelines=1
" vim:foldmethod=marker foldlevel=0
