# ================================
# File Name: gitconfig
# Author: cissoid
# Created At: 2015-09-01T09:34:00+0800
# Last Modified: 2018-01-18T17:34:31+0800
# ================================

[core]
    editor = vim
    excludesFile = ~/.gitignore
[alias]
    br = branch
    st = status
    co = checkout
    ci = commit
    clone-github = "!f() { git clone https://github.com/$1 $2; }; f"
    config-user = "!f() { git config user.name $1; git config user.email $2; }; f"
    dsf = "!f() { [ -z \"$GIT_PREFIX\" ] || cd $GIT_PREFIX; git diff --color $@ | diff-so-fancy | less -RFX; }; f"
    glog = log --all --graph --pretty='%C(auto)%h %d %s (%C(cyan)%an%Creset, %Cgreen%ad%Creset)'
    refresh-all = "!f() {                                                \
            for folder in $(ls); do                                      \
                if [ -d $folder ] && [ -d $folder/.git ]; then           \
                    cd $folder;                                          \
                    branch=$(git branch | grep -Po \"(?<=\\*).*(?=$)\"); \
                    echo ====START $folder $branch====;                  \
                    git pull --prune --progress;                         \
                    git pull --progress origin $branch;                  \
                    git gc --prune;                                      \
                    echo ====END $folder $branch====;                    \
                    cd ..;                                               \
                fi;                                                      \
            done;                                                        \
        }; f"
    pull-all = "!f() {                                                                                                 \
            for folder in $(ls); do                                                                                    \
                if [ -d $folder ] && [ -d $folder/.git ]; then                                                         \
                    echo ====START $folder====;                                                                        \
                    cd $folder;                                                                                        \
                    current_branch=$(git branch | grep -Po \"(?<=\\*).*(?=$)\");                                       \
                    git pull origin --prune --progress;                                                                \
                    for branch in $(git branch --remotes | grep -Po \"(?<=origin/)([a-zA-Z0-9\\-_]*)(?=(\\s|$))\"); do \
                        if [ ! \"$branch\" == \"HEAD\" ]; then                                                         \
                            git checkout $branch && git merge;                                                         \
                        fi;                                                                                            \
                    done;                                                                                              \
                    git checkout $current_branch;                                                                      \
                    git gc --prune;                                                                                    \
                    cd ..;                                                                                             \
                    echo ====END $folder====;                                                                          \
                fi;                                                                                                    \
            done;                                                                                                      \
        }; f"
    backup-all = "!f() {                                       \
            for folder in $(ls); do                            \
                if [ -d $folder ] && [ -d $folder/.git ]; then \
                    echo ====START $folder====;                \
                    cd $folder;                                \
                    git push --mirror backup;                  \
                    cd ..;                                     \
                    echo ====END $folder====;                  \
                fi;                                            \
            done;                                              \
        }; f"
    rewrite-author = "!f() {                                                                            \
            AUTHOR=$1;                                                                                  \
            AUTHOR_EMAIL=$2;                                                                            \
            for branch in $(git branch -r | grep -Po \"(?<=origin/)([a-zA-Z0-9\\-_]*)(?=(\\s|$))\"); do \
                if [ ! \"$branch\" == \"HEAD\" ]; then                                                  \
                    echo ====START $branch====;                                                         \
                    git checkout $branch;                                                               \
                    git pull origin $branch;                                                            \
                    git filter-branch -f --commit-filter \"                                             \
                        GIT_AUTHOR_NAME=$AUTHOR GIT_AUTHOR_EMAIL=$AUTHOR_EMAIL                          \
                        GIT_COMMITTER_NAME=$AUTHOR GIT_COMMITTER_EMAIL=$AUTHOR_EMAIL                    \
                        git commit-tree \\\"\\$@\\\"\";                                                 \
                fi;                                                                                     \
            done;                                                                                       \
        }; f"
    ignore-get = "!/usr/bin/env bash -c 'f() {                                                                     \
        GITIGNORE=\"./.gitignore\";                                                                                \
        declare -A LANGS=(                                                                                         \
            [\"linux\"]=\"Global/Linux\"                                                                           \
            [\"macos\"]=\"Global/macOS\"                                                                           \
            [\"windows\"]=\"Global/Windows\"                                                                       \
            [\"ansible\"]=\"Global/Ansible\"                                                                       \
            [\"eclipse\"]=\"Global/Eclipse\"                                                                       \
            [\"emacs\"]=\"Global/Emacs\"                                                                           \
            [\"redis\"]=\"Global/Redis\"                                                                           \
            [\"sublime\"]=\"Global/SublimeText\"                                                                   \
            [\"vim\"]=\"Global/Vim\"                                                                               \
            [\"cmake\"]=\"CMake\"                                                                                  \
            [\"make\"]=\"Autotools\"                                                                               \
            [\"c\"]=\"C\"                                                                                          \
            [\"cpp\"]=\"C++\"                                                                                      \
            [\"go\"]=\"Go\"                                                                                        \
            [\"java\"]=\"Java\"                                                                                    \
            [\"node\"]=\"Node\"                                                                                    \
            [\"python\"]=\"Python\"                                                                                \
            [\"sass\"]=\"Sass\"                                                                                    \
        );                                                                                                         \
        echo \"# vim: foldmethod=marker\" > $GITIGNORE;                                                            \
        for arg in $@; do                                                                                          \
            lang=${LANGS[$arg]};                                                                                   \
            if [ \"$lang\" == \"\" ]; then                                                                         \
                continue;                                                                                          \
            fi;                                                                                                    \
            echo \"\" >> $GITIGNORE;                                                                               \
            echo \"# $lang {{{\" >> $GITIGNORE;                                                                    \
            echo \"\" >> $GITIGNORE;                                                                               \
            wget -O - \"https://raw.githubusercontent.com/github/gitignore/master/$lang.gitignore\" >> $GITIGNORE; \
            echo \"\" >> $GITIGNORE;                                                                               \
            echo \"# }}}\" >> $GITIGNORE;                                                                          \
        done;                                                                                                      \
    }; f $0 $*'"
[color]
    branch = auto
    diff = auto
    grep = auto
    interactive = auto
    pager = true
    showBranch = auto
    status = auto
    ui = auto
[color "diff-highlight"]
	oldNormal = red bold
	oldHighlight = red bold 52
	newNormal = green bold
	newHighlight = green bold 22
[grep]
    lineNumber = true
[log]
    date = "format:%F %T"
[user]
	useConfigOnly = true

# vim: filetype=gitconfig
